#!/bin/sh

set -e

source env.xcconfig

function export_iOS_app {
  local archive=$1
  local export_path=$2
  local export_options="build/exportOptions_iOS.plist"
  local export_plist="<?xml version=\"1.0\" encoding=\"UTF-8\"?>
  <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">
  <plist version=\"1.0\">
    <dict>
      <key>method</key>
      <string>release-testing</string>

      <key>teamID</key>
      <string>$DEV_TEAM</string>
    </dict>
  </plist>"
  echo "$export_plist" > $export_options

  xcodebuild \
    DEV_TEAM=$DEV_TEAM \
    -exportArchive \
    -allowProvisioningUpdates \
    -archivePath $archive \
    -exportPath $export_path \
    -exportOptionsPlist $export_options
}

function export_macOS_app {
  local archive=$1
  local export_path=$2
  local export_options="build/exportOptions_macOS.plist"
  local export_plist="<?xml version=\"1.0\" encoding=\"UTF-8\"?>
  <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">
  <plist version=\"1.0\">
    <dict>
      <key>destination</key>
      <string>export</string>

      <key>method</key>
      <string>development</string>

      <key>signingStyle</key>
      <string>manual</string>

      <key>signingCertificate</key>
      <string>Developer ID Application</string>

      <key>teamID</key>
      <string>$DEV_TEAM</string>
    </dict>
  </plist>"
  echo "$export_plist" > $export_options

  xcodebuild \
    DEV_TEAM=$DEV_TEAM \
    -exportArchive \
    -archivePath $archive \
    -exportPath $export_path \
    -exportOptionsPlist $export_options

  echo ">>> Creating bundle for upload..."

  (cd $export_path \
    && zip -r SpellingBeePlus.zip SpellingBeePlus.app \
    && rm -rf SpellingBeePlus.app)

  echo ">>> Notarizing..."

  xcrun notarytool submit \
    -p "Personal App Signing" \
    --verbose \
    --wait \
    --timeout 2h \
    $export_path/SpellingBeePlus.zip
}

function build_app {
  local platform=$1

  echo ">>> Building $platform app..."
  echo ""

  local archive=build/SpellingBeePlus_$platform.xcarchive

  xcodebuild \
    DEV_TEAM=$DEV_TEAM \
    -scheme "SpellingBeePlus ($platform)" \
    -destination "generic/platform=$platform" \
    -archivePath $archive \
    archive

  echo ">>> Archiving $platform app..."
  echo ""

  if [ $platform = "iOS" ]; then
    export_iOS_app $archive "build/export"
  else
    export_macOS_app $archive "build/export"
  fi
}

if [[ -z $DEV_TEAM ]]; then
  echo "DEV_TEAM must be defined"
  exit 1
fi

do_build_ios=1
do_build_mac=1
do_publish=1
do_tag=1
do_check=1

while getopts "hp:b" options; do
  case "${options}" in
    p)
      platform=${OPTARG}
      case "${platform}" in
        mac)
          do_build_ios=0
          ;;
        ios)
          do_build_mac=0
          ;;
        *)
          echo "unknown platform $platform"
          exit 1
        ;;
      esac
      ;;
    b)
      do_check=0
      do_publish=0
      do_tag=0
      ;;
    h)
      echo "usage: $0 [-p platform] [-P] [-T] [-h]"
      echo "  -p platform: build for platform (mac or ios)"
      echo "  -b: build-only"
      echo "  -h: print this message"
      exit 0
      ;;
    *)
      echo "unknown option"
      exit 1
      ;;
  esac
done

version=$(./version version)

if (( $do_check )); then
  # grep -q $version CHANGELOG.md || (echo "Version $version not found in CHANGELOG.md" && exit 1)
  git diff-index --quiet HEAD || (echo "Project has uncommitted changes" && exit 1)
fi

echo ">>> Clearing previous builds..."
rm -rf ./build

if (( $do_build_ios )); then
  build_app iOS
fi
if (( $do_build_mac )); then
  build_app macOS
fi

# if (( $do_tag )); then
#   echo ">>> Tagging version $version..."
#   echo ""
#
#   git tag "v$version" HEAD
# fi

echo ""
echo ">>> Done."
